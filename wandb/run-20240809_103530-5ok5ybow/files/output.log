  0%|                                                                                                                                                                               | 0/20000 [00:00<?, ?it/s]
  0%|                                                                                                                                                                                  | 0/10 [00:00<?, ?it/s]
Traceback (most recent call last):                                                                                                                                                     | 0/10 [00:00<?, ?it/s]
  File "c:\Users\44797\Documents\nano-GPT-S\transformer.py", line 346, in <module>
  File "c:\Users\44797\Documents\nano-GPT-S\transformer.py", line 192, in train
    loss = self.training_step(batch)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\44797\Documents\nano-GPT-S\transformer.py", line 157, in training_step
    logits = self.model(tokens)
             ^^^^^^^^^^^^^^^^^^
  File "C:\Users\44797\miniconda3\envs\arena-env\Lib\site-packages\torch\nn\modules\module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\44797\miniconda3\envs\arena-env\Lib\site-packages\torch\nn\modules\module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\44797\Documents\nano-GPT-S\transformer.py", line 136, in forward
    unembed = self.unembed(residual_stream) # (B, T, d_vocab)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\44797\miniconda3\envs\arena-env\Lib\site-packages\torch\nn\modules\module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\44797\miniconda3\envs\arena-env\Lib\site-packages\torch\nn\modules\module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\44797\miniconda3\envs\arena-env\Lib\site-packages\torch\nn\modules\sparse.py", line 163, in forward
    return F.embedding(
           ^^^^^^^^^^^^
  File "C:\Users\44797\miniconda3\envs\arena-env\Lib\site-packages\torch\nn\functional.py", line 2264, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: Expected tensor for argument #1 'indices' to have one of the following scalar types: Long, Int; but got torch.FloatTensor instead (while checking arguments for embedding)